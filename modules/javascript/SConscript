#!/usr/bin/env python
import os, os.path as path

Import('build')

webkit_tp = path.join(build.third_party, 'webkit')
webkit_lib = path.join(webkit_tp, 'lib')
webkit_inc = path.join(webkit_tp, 'include')

Env = build.env.Clone()
Env.Append(CPPDEFINES=('KROLL_JAVASCRIPT_API_EXPORT', 1))
build.add_thirdparty(Env, 'poco')

if build.is_osx():
	Env.Append(FRAMEWORKPATH=[webkit_tp])
	Env.Append(FRAMEWORKS=['Cocoa','JavaScriptCore'])
	Env.Append(CPPPATH=[build.kroll_include_dir])

elif build.is_linux():
	Env.Append(LIBS=['webkittitanium-1.0'])
	Env.Append(LIBPATH=[webkit_lib])
	Env.Append(CPPPATH=[webkit_inc, build.kroll_include_dir])

elif build.is_win32():
	Env.Append(LIBPATH=[webkit_lib])
	Env.Append(CPPPATH=[path.join(webkit_inc, 'webkit'),
                        path.join(webkit_inc, 'JavaScriptCore'),
                        path.join(build.third_party, 'icu', 'include'),
                        build.kroll_include_dir])

	Env.Append(LIBS=['WebKitGUID', 'WebKit',
                     'kernel32', 'shell32',
                     'user32', 'ole32',
                     'comctl32', 'shlwapi',
                     'oleaut32', 'icuuc', 
                     'pthreadVC2', 'kroll'])
	Env.Append(LINKFLAGS=['/LTCG', '/INCREMENTAL:NO'])

m = build.add_module('javascript', env=Env)
t = Env.SharedLibrary(m.build_dir + '/javascriptmodule', Glob('*.cpp'))
build.mark_build_target(t)

